<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="20" passed="18" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-06-14T16:40:59 IST" name="Flipkart Automation Suite" finished-at="2024-06-14T16:45:20 IST" duration-ms="260210">
    <groups>
      <group name="seller">
        <method signature="SellerTest.testSellerBtnPresence()[pri:1, instance:com.flipkart.tests.SellerTest@1b66c0fb]" name="testSellerBtnPresence" class="com.flipkart.tests.SellerTest"/>
        <method signature="SellerTest.testSellerLoginFunctionality()[pri:2, instance:com.flipkart.tests.SellerTest@1b66c0fb]" name="testSellerLoginFunctionality" class="com.flipkart.tests.SellerTest"/>
        <method signature="SellerTest.testSellerResetPasswordFunctionality()[pri:3, instance:com.flipkart.tests.SellerTest@1b66c0fb]" name="testSellerResetPasswordFunctionality" class="com.flipkart.tests.SellerTest"/>
        <method signature="SellerTest.testStartSellingBtnPresence()[pri:4, instance:com.flipkart.tests.SellerTest@1b66c0fb]" name="testStartSellingBtnPresence" class="com.flipkart.tests.SellerTest"/>
      </group> <!-- seller -->
      <group name="help">
        <method signature="HelpPageTest.testHelpPageFeedbackYesBtnFunctionality()[pri:1, instance:com.flipkart.tests.HelpPageTest@7bbc8656]" name="testHelpPageFeedbackYesBtnFunctionality" class="com.flipkart.tests.HelpPageTest"/>
        <method signature="HelpPageTest.testHelpPageFeedbackNoBtnFunctionality()[pri:2, instance:com.flipkart.tests.HelpPageTest@7bbc8656]" name="testHelpPageFeedbackNoBtnFunctionality" class="com.flipkart.tests.HelpPageTest"/>
      </group> <!-- help -->
      <group name="grocery">
        <method signature="GroceryTest.testGroceryValidPincode()[pri:1, instance:com.flipkart.tests.GroceryTest@1b919693]" name="testGroceryValidPincode" class="com.flipkart.tests.GroceryTest"/>
        <method signature="GroceryTest.testGroceryInValidPincode()[pri:2, instance:com.flipkart.tests.GroceryTest@1b919693]" name="testGroceryInValidPincode" class="com.flipkart.tests.GroceryTest"/>
        <method signature="GroceryTest.testGrocerySearchBarFunctionality()[pri:3, instance:com.flipkart.tests.GroceryTest@1b919693]" name="testGrocerySearchBarFunctionality" class="com.flipkart.tests.GroceryTest"/>
      </group> <!-- grocery -->
      <group name="sellerRegister">
        <method signature="SellerRegisterPageTest.testInvalidOtpFunctionality()[pri:1, instance:com.flipkart.tests.SellerRegisterPageTest@2f953efd]" name="testInvalidOtpFunctionality" class="com.flipkart.tests.SellerRegisterPageTest"/>
      </group> <!-- sellerRegister -->
      <group name="login">
        <method signature="LoginTest.testInvalidLoginFunctionality()[pri:1, instance:com.flipkart.tests.LoginTest@66ea810]" name="testInvalidLoginFunctionality" class="com.flipkart.tests.LoginTest"/>
      </group> <!-- login -->
      <group name="cart">
        <method signature="CartTest.testAddProductToCart()[pri:1, instance:com.flipkart.tests.CartTest@6f43c82]" name="testAddProductToCart" class="com.flipkart.tests.CartTest"/>
        <method signature="CartTest.testRemoveProductFromCart()[pri:2, instance:com.flipkart.tests.CartTest@6f43c82]" name="testRemoveProductFromCart" class="com.flipkart.tests.CartTest"/>
        <method signature="CartTest.testBuyNowBtnFunctionality()[pri:3, instance:com.flipkart.tests.CartTest@6f43c82]" name="testBuyNowBtnFunctionality" class="com.flipkart.tests.CartTest"/>
      </group> <!-- cart -->
      <group name="advertise">
        <method signature="AdvertisePageTest.testInvalidLoginFunctionalityonAdsPage()[pri:1, instance:com.flipkart.tests.AdvertisePageTest@4082ba93]" name="testInvalidLoginFunctionalityonAdsPage" class="com.flipkart.tests.AdvertisePageTest"/>
        <method signature="AdvertisePageTest.testAdsResetPasswordFunctionality()[pri:2, instance:com.flipkart.tests.AdvertisePageTest@4082ba93]" name="testAdsResetPasswordFunctionality" class="com.flipkart.tests.AdvertisePageTest"/>
        <method signature="AdvertisePageTest.testAdsEmptyResetPasswordFunctionality()[pri:3, instance:com.flipkart.tests.AdvertisePageTest@4082ba93]" name="testAdsEmptyResetPasswordFunctionality" class="com.flipkart.tests.AdvertisePageTest"/>
      </group> <!-- advertise -->
      <group name="home">
        <method signature="HomeTest.testFlipkartLogoVisibility()[pri:1, instance:com.flipkart.tests.HomeTest@3aa078fd]" name="testFlipkartLogoVisibility" class="com.flipkart.tests.HomeTest"/>
        <method signature="HomeTest.testSearchBarFunctionality()[pri:2, instance:com.flipkart.tests.HomeTest@3aa078fd]" name="testSearchBarFunctionality" class="com.flipkart.tests.HomeTest"/>
        <method signature="HomeTest.testSearchWithMisspelledQueries()[pri:3, instance:com.flipkart.tests.HomeTest@3aa078fd]" name="testSearchWithMisspelledQueries" class="com.flipkart.tests.HomeTest"/>
      </group> <!-- home -->
    </groups>
    <test started-at="2024-06-14T16:40:59 IST" name="AdvertisePageTest" finished-at="2024-06-14T16:41:33 IST" duration-ms="33821">
      <class name="com.flipkart.tests.AdvertisePageTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.flipkart.tests.AdvertisePageTest@4082ba93]" started-at="2024-06-14T16:40:59 IST" name="setup" finished-at="2024-06-14T16:41:08 IST" duration-ms="8929" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.flipkart.tests.AdvertisePageTest.testInvalidLoginFunctionalityonAdsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testInvalidLoginFunctionalityonAdsPage()[pri:1, instance:com.flipkart.tests.AdvertisePageTest@4082ba93]" started-at="2024-06-14T16:41:08 IST" name="testInvalidLoginFunctionalityonAdsPage" finished-at="2024-06-14T16:41:12 IST" duration-ms="3652" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLoginFunctionalityonAdsPage -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.flipkart.tests.AdvertisePageTest@4082ba93]" started-at="2024-06-14T16:41:12 IST" name="teardown" finished-at="2024-06-14T16:41:14 IST" duration-ms="2076" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidLoginFunctionalityonAdsPage status=SUCCESS method=AdvertisePageTest.testInvalidLoginFunctionalityonAdsPage()[pri:1, instance:com.flipkart.tests.AdvertisePageTest@4082ba93] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.flipkart.tests.AdvertisePageTest@4082ba93]" started-at="2024-06-14T16:41:14 IST" name="setup" finished-at="2024-06-14T16:41:20 IST" duration-ms="5500" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.flipkart.tests.AdvertisePageTest.testAdsResetPasswordFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testAdsResetPasswordFunctionality()[pri:2, instance:com.flipkart.tests.AdvertisePageTest@4082ba93]" started-at="2024-06-14T16:41:20 IST" name="testAdsResetPasswordFunctionality" finished-at="2024-06-14T16:41:22 IST" duration-ms="2827" status="FAIL">
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[stale element reference: stale element not found in the current frame
  (Session info: chrome=126.0.6478.62)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Build info: version: '4.19.1', revision: 'abe0ee07dc'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [de1e6aae536c269079d9f31997513447, isElementDisplayed {id=f.1ABB92403013D5D4F727538F90FE745A.d.CA03D57860155BB70414E2DECAE94CF7.e.130}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.62, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\AASHIS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55878}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55878/devtoo..., se:cdpVersion: 126.0.6478.62, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (de1e6aae536c269079d9f31997513447)] -> css selector: .styles__Heading-sc-18s7njp-7.erLrxD]
Session ID: de1e6aae536c269079d9f31997513447]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: stale element reference: stale element not found in the current frame
  (Session info: chrome=126.0.6478.62)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Build info: version: '4.19.1', revision: 'abe0ee07dc'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [de1e6aae536c269079d9f31997513447, isElementDisplayed {id=f.1ABB92403013D5D4F727538F90FE745A.d.CA03D57860155BB70414E2DECAE94CF7.e.130}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.62, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\AASHIS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55878}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55878/devtoo..., se:cdpVersion: 126.0.6478.62, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (de1e6aae536c269079d9f31997513447)] -> css selector: .styles__Heading-sc-18s7njp-7.erLrxD]
Session ID: de1e6aae536c269079d9f31997513447
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.isDisplayed(RemoteWebElement.java:282)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy27.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
at com.flipkart.utils.WaitUtils.waitForElementToBeVisible(WaitUtils.java:14)
at com.flipkart.pages.AdvertisePage.isResetPasswordPageDisplayed(AdvertisePage.java:101)
at com.flipkart.tests.AdvertisePageTest.testAdsResetPasswordFunctionality(AdvertisePageTest.java:75)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdsResetPasswordFunctionality -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.flipkart.tests.AdvertisePageTest@4082ba93]" started-at="2024-06-14T16:41:23 IST" name="teardown" finished-at="2024-06-14T16:41:25 IST" duration-ms="2057" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAdsResetPasswordFunctionality status=FAILURE method=AdvertisePageTest.testAdsResetPasswordFunctionality()[pri:2, instance:com.flipkart.tests.AdvertisePageTest@4082ba93] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.flipkart.tests.AdvertisePageTest@4082ba93]" started-at="2024-06-14T16:41:25 IST" name="setup" finished-at="2024-06-14T16:41:30 IST" duration-ms="4980" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.flipkart.tests.AdvertisePageTest.testAdsEmptyResetPasswordFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testAdsEmptyResetPasswordFunctionality()[pri:3, instance:com.flipkart.tests.AdvertisePageTest@4082ba93]" started-at="2024-06-14T16:41:30 IST" name="testAdsEmptyResetPasswordFunctionality" finished-at="2024-06-14T16:41:32 IST" duration-ms="2156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdsEmptyResetPasswordFunctionality -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.flipkart.tests.AdvertisePageTest@4082ba93]" started-at="2024-06-14T16:41:32 IST" name="teardown" finished-at="2024-06-14T16:41:33 IST" duration-ms="1569" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAdsEmptyResetPasswordFunctionality status=SUCCESS method=AdvertisePageTest.testAdsEmptyResetPasswordFunctionality()[pri:3, instance:com.flipkart.tests.AdvertisePageTest@4082ba93] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.flipkart.tests.AdvertisePageTest -->
    </test> <!-- AdvertisePageTest -->
    <test started-at="2024-06-14T16:41:33 IST" name="CartTest" finished-at="2024-06-14T16:42:26 IST" duration-ms="53085">
      <class name="com.flipkart.tests.CartTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.flipkart.tests.CartTest@6f43c82]" started-at="2024-06-14T16:41:33 IST" name="setup" finished-at="2024-06-14T16:41:37 IST" duration-ms="3508" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.flipkart.tests.CartTest.testAddProductToCart() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testAddProductToCart()[pri:1, instance:com.flipkart.tests.CartTest@6f43c82]" started-at="2024-06-14T16:41:37 IST" name="testAddProductToCart" finished-at="2024-06-14T16:41:51 IST" duration-ms="14106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddProductToCart -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.flipkart.tests.CartTest@6f43c82]" started-at="2024-06-14T16:41:51 IST" name="teardown" finished-at="2024-06-14T16:41:52 IST" duration-ms="1566" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddProductToCart status=SUCCESS method=CartTest.testAddProductToCart()[pri:1, instance:com.flipkart.tests.CartTest@6f43c82] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.flipkart.tests.CartTest@6f43c82]" started-at="2024-06-14T16:41:53 IST" name="setup" finished-at="2024-06-14T16:41:57 IST" duration-ms="4736" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.flipkart.tests.CartTest.testRemoveProductFromCart() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testRemoveProductFromCart()[pri:2, instance:com.flipkart.tests.CartTest@6f43c82]" started-at="2024-06-14T16:41:57 IST" name="testRemoveProductFromCart" finished-at="2024-06-14T16:42:10 IST" duration-ms="12311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveProductFromCart -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.flipkart.tests.CartTest@6f43c82]" started-at="2024-06-14T16:42:10 IST" name="teardown" finished-at="2024-06-14T16:42:11 IST" duration-ms="1628" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testRemoveProductFromCart status=SUCCESS method=CartTest.testRemoveProductFromCart()[pri:2, instance:com.flipkart.tests.CartTest@6f43c82] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.flipkart.tests.CartTest@6f43c82]" started-at="2024-06-14T16:42:11 IST" name="setup" finished-at="2024-06-14T16:42:16 IST" duration-ms="4823" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.flipkart.tests.CartTest.testBuyNowBtnFunctionality() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testBuyNowBtnFunctionality()[pri:3, instance:com.flipkart.tests.CartTest@6f43c82]" started-at="2024-06-14T16:42:16 IST" name="testBuyNowBtnFunctionality" finished-at="2024-06-14T16:42:25 IST" duration-ms="8844" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuyNowBtnFunctionality -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.flipkart.tests.CartTest@6f43c82]" started-at="2024-06-14T16:42:25 IST" name="teardown" finished-at="2024-06-14T16:42:26 IST" duration-ms="1557" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBuyNowBtnFunctionality status=SUCCESS method=CartTest.testBuyNowBtnFunctionality()[pri:3, instance:com.flipkart.tests.CartTest@6f43c82] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.flipkart.tests.CartTest -->
    </test> <!-- CartTest -->
    <test started-at="2024-06-14T16:42:26 IST" name="GroceryTest" finished-at="2024-06-14T16:42:56 IST" duration-ms="29185">
      <class name="com.flipkart.tests.GroceryTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.flipkart.tests.GroceryTest@1b919693]" started-at="2024-06-14T16:42:26 IST" name="setup" finished-at="2024-06-14T16:42:31 IST" duration-ms="5005" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.flipkart.tests.GroceryTest.testGroceryValidPincode() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testGroceryValidPincode()[pri:1, instance:com.flipkart.tests.GroceryTest@1b919693]" started-at="2024-06-14T16:42:31 IST" name="testGroceryValidPincode" finished-at="2024-06-14T16:42:36 IST" duration-ms="4257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroceryValidPincode -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.flipkart.tests.GroceryTest@1b919693]" started-at="2024-06-14T16:42:36 IST" name="teardown" finished-at="2024-06-14T16:42:38 IST" duration-ms="2137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testGroceryValidPincode status=SUCCESS method=GroceryTest.testGroceryValidPincode()[pri:1, instance:com.flipkart.tests.GroceryTest@1b919693] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.flipkart.tests.GroceryTest@1b919693]" started-at="2024-06-14T16:42:38 IST" name="setup" finished-at="2024-06-14T16:42:43 IST" duration-ms="4979" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.flipkart.tests.GroceryTest.testGroceryInValidPincode() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testGroceryInValidPincode()[pri:2, instance:com.flipkart.tests.GroceryTest@1b919693]" started-at="2024-06-14T16:42:43 IST" name="testGroceryInValidPincode" finished-at="2024-06-14T16:42:45 IST" duration-ms="2485" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroceryInValidPincode -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.flipkart.tests.GroceryTest@1b919693]" started-at="2024-06-14T16:42:45 IST" name="teardown" finished-at="2024-06-14T16:42:47 IST" duration-ms="1640" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testGroceryInValidPincode status=SUCCESS method=GroceryTest.testGroceryInValidPincode()[pri:2, instance:com.flipkart.tests.GroceryTest@1b919693] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.flipkart.tests.GroceryTest@1b919693]" started-at="2024-06-14T16:42:47 IST" name="setup" finished-at="2024-06-14T16:42:52 IST" duration-ms="4704" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.flipkart.tests.GroceryTest.testGrocerySearchBarFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testGrocerySearchBarFunctionality()[pri:3, instance:com.flipkart.tests.GroceryTest@1b919693]" started-at="2024-06-14T16:42:52 IST" name="testGrocerySearchBarFunctionality" finished-at="2024-06-14T16:42:54 IST" duration-ms="2286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGrocerySearchBarFunctionality -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.flipkart.tests.GroceryTest@1b919693]" started-at="2024-06-14T16:42:54 IST" name="teardown" finished-at="2024-06-14T16:42:56 IST" duration-ms="1684" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testGrocerySearchBarFunctionality status=SUCCESS method=GroceryTest.testGrocerySearchBarFunctionality()[pri:3, instance:com.flipkart.tests.GroceryTest@1b919693] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.flipkart.tests.GroceryTest -->
    </test> <!-- GroceryTest -->
    <test started-at="2024-06-14T16:42:56 IST" name="HelpPageTest" finished-at="2024-06-14T16:43:14 IST" duration-ms="18430">
      <class name="com.flipkart.tests.HelpPageTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.flipkart.tests.HelpPageTest@7bbc8656]" started-at="2024-06-14T16:42:56 IST" name="setup" finished-at="2024-06-14T16:43:01 IST" duration-ms="4937" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.flipkart.tests.HelpPageTest.testHelpPageFeedbackYesBtnFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testHelpPageFeedbackYesBtnFunctionality()[pri:1, instance:com.flipkart.tests.HelpPageTest@7bbc8656]" started-at="2024-06-14T16:43:01 IST" name="testHelpPageFeedbackYesBtnFunctionality" finished-at="2024-06-14T16:43:03 IST" duration-ms="2620" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHelpPageFeedbackYesBtnFunctionality -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.flipkart.tests.HelpPageTest@7bbc8656]" started-at="2024-06-14T16:43:03 IST" name="teardown" finished-at="2024-06-14T16:43:04 IST" duration-ms="1206" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHelpPageFeedbackYesBtnFunctionality status=SUCCESS method=HelpPageTest.testHelpPageFeedbackYesBtnFunctionality()[pri:1, instance:com.flipkart.tests.HelpPageTest@7bbc8656] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.flipkart.tests.HelpPageTest@7bbc8656]" started-at="2024-06-14T16:43:04 IST" name="setup" finished-at="2024-06-14T16:43:09 IST" duration-ms="4841" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.flipkart.tests.HelpPageTest.testHelpPageFeedbackNoBtnFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testHelpPageFeedbackNoBtnFunctionality()[pri:2, instance:com.flipkart.tests.HelpPageTest@7bbc8656]" started-at="2024-06-14T16:43:09 IST" name="testHelpPageFeedbackNoBtnFunctionality" finished-at="2024-06-14T16:43:13 IST" duration-ms="3388" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHelpPageFeedbackNoBtnFunctionality -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.flipkart.tests.HelpPageTest@7bbc8656]" started-at="2024-06-14T16:43:13 IST" name="teardown" finished-at="2024-06-14T16:43:14 IST" duration-ms="1432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHelpPageFeedbackNoBtnFunctionality status=SUCCESS method=HelpPageTest.testHelpPageFeedbackNoBtnFunctionality()[pri:2, instance:com.flipkart.tests.HelpPageTest@7bbc8656] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.flipkart.tests.HelpPageTest -->
    </test> <!-- HelpPageTest -->
    <test started-at="2024-06-14T16:43:14 IST" name="HomeTest" finished-at="2024-06-14T16:43:50 IST" duration-ms="35546">
      <class name="com.flipkart.tests.HomeTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.flipkart.tests.HomeTest@3aa078fd]" started-at="2024-06-14T16:43:14 IST" name="setup" finished-at="2024-06-14T16:43:19 IST" duration-ms="4884" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.flipkart.tests.HomeTest.testFlipkartLogoVisibility()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testFlipkartLogoVisibility()[pri:1, instance:com.flipkart.tests.HomeTest@3aa078fd]" started-at="2024-06-14T16:43:19 IST" name="testFlipkartLogoVisibility" finished-at="2024-06-14T16:43:19 IST" duration-ms="232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFlipkartLogoVisibility -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.flipkart.tests.HomeTest@3aa078fd]" started-at="2024-06-14T16:43:19 IST" name="teardown" finished-at="2024-06-14T16:43:21 IST" duration-ms="1689" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFlipkartLogoVisibility status=SUCCESS method=HomeTest.testFlipkartLogoVisibility()[pri:1, instance:com.flipkart.tests.HomeTest@3aa078fd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.flipkart.tests.HomeTest@3aa078fd]" started-at="2024-06-14T16:43:21 IST" name="setup" finished-at="2024-06-14T16:43:26 IST" duration-ms="4663" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.flipkart.tests.HomeTest.testSearchBarFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSearchBarFunctionality()[pri:2, instance:com.flipkart.tests.HomeTest@3aa078fd]" started-at="2024-06-14T16:43:26 IST" name="testSearchBarFunctionality" finished-at="2024-06-14T16:43:28 IST" duration-ms="2904" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchBarFunctionality -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.flipkart.tests.HomeTest@3aa078fd]" started-at="2024-06-14T16:43:28 IST" name="teardown" finished-at="2024-06-14T16:43:30 IST" duration-ms="1479" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchBarFunctionality status=SUCCESS method=HomeTest.testSearchBarFunctionality()[pri:2, instance:com.flipkart.tests.HomeTest@3aa078fd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.flipkart.tests.HomeTest@3aa078fd]" started-at="2024-06-14T16:43:30 IST" name="setup" finished-at="2024-06-14T16:43:35 IST" duration-ms="5010" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.flipkart.tests.HomeTest.testSearchWithMisspelledQueries()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSearchWithMisspelledQueries()[pri:3, instance:com.flipkart.tests.HomeTest@3aa078fd]" started-at="2024-06-14T16:43:35 IST" name="testSearchWithMisspelledQueries" finished-at="2024-06-14T16:43:48 IST" duration-ms="12770" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchWithMisspelledQueries -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.flipkart.tests.HomeTest@3aa078fd]" started-at="2024-06-14T16:43:48 IST" name="teardown" finished-at="2024-06-14T16:43:50 IST" duration-ms="1905" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchWithMisspelledQueries status=SUCCESS method=HomeTest.testSearchWithMisspelledQueries()[pri:3, instance:com.flipkart.tests.HomeTest@3aa078fd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.flipkart.tests.HomeTest -->
    </test> <!-- HomeTest -->
    <test started-at="2024-06-14T16:43:50 IST" name="LoginTest" finished-at="2024-06-14T16:44:01 IST" duration-ms="11220">
      <class name="com.flipkart.tests.LoginTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.flipkart.tests.LoginTest@66ea810]" started-at="2024-06-14T16:43:50 IST" name="setup" finished-at="2024-06-14T16:43:55 IST" duration-ms="5430" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.flipkart.tests.LoginTest.testInvalidLoginFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testInvalidLoginFunctionality()[pri:1, instance:com.flipkart.tests.LoginTest@66ea810]" started-at="2024-06-14T16:43:55 IST" name="testInvalidLoginFunctionality" finished-at="2024-06-14T16:43:59 IST" duration-ms="4009" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLoginFunctionality -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.flipkart.tests.LoginTest@66ea810]" started-at="2024-06-14T16:43:59 IST" name="teardown" finished-at="2024-06-14T16:44:01 IST" duration-ms="1777" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidLoginFunctionality status=SUCCESS method=LoginTest.testInvalidLoginFunctionality()[pri:1, instance:com.flipkart.tests.LoginTest@66ea810] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.flipkart.tests.LoginTest -->
    </test> <!-- LoginTest -->
    <test started-at="2024-06-14T16:44:01 IST" name="SellerRegisterPageTest" finished-at="2024-06-14T16:44:16 IST" duration-ms="15334">
      <class name="com.flipkart.tests.SellerRegisterPageTest">
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.flipkart.tests.SellerRegisterPageTest@2f953efd]" started-at="2024-06-14T16:44:01 IST" name="setup" finished-at="2024-06-14T16:44:06 IST" duration-ms="5098" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.flipkart.tests.SellerRegisterPageTest.testInvalidOtpFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testInvalidOtpFunctionality()[pri:1, instance:com.flipkart.tests.SellerRegisterPageTest@2f953efd]" started-at="2024-06-14T16:44:06 IST" name="testInvalidOtpFunctionality" finished-at="2024-06-14T16:44:15 IST" duration-ms="8685" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidOtpFunctionality -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.flipkart.tests.SellerRegisterPageTest@2f953efd]" started-at="2024-06-14T16:44:15 IST" name="teardown" finished-at="2024-06-14T16:44:16 IST" duration-ms="1548" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidOtpFunctionality status=SUCCESS method=SellerRegisterPageTest.testInvalidOtpFunctionality()[pri:1, instance:com.flipkart.tests.SellerRegisterPageTest@2f953efd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.flipkart.tests.SellerRegisterPageTest -->
    </test> <!-- SellerRegisterPageTest -->
    <test started-at="2024-06-14T16:44:16 IST" name="SellerTest" finished-at="2024-06-14T16:45:20 IST" duration-ms="63502">
      <class name="com.flipkart.tests.SellerTest">
        <test-method is-config="true" signature="beforesuite()[pri:0, instance:com.flipkart.tests.SellerTest@1b66c0fb]" started-at="2024-06-14T16:40:58 IST" name="beforesuite" finished-at="2024-06-14T16:40:59 IST" duration-ms="1192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforesuite -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.flipkart.tests.SellerTest@1b66c0fb]" started-at="2024-06-14T16:44:16 IST" name="setup" finished-at="2024-06-14T16:44:23 IST" duration-ms="6493" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.flipkart.tests.SellerTest.testSellerBtnPresence()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSellerBtnPresence()[pri:1, instance:com.flipkart.tests.SellerTest@1b66c0fb]" started-at="2024-06-14T16:44:23 IST" name="testSellerBtnPresence" finished-at="2024-06-14T16:44:23 IST" duration-ms="259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSellerBtnPresence -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.flipkart.tests.SellerTest@1b66c0fb]" started-at="2024-06-14T16:44:23 IST" name="teardown" finished-at="2024-06-14T16:44:25 IST" duration-ms="1807" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSellerBtnPresence status=SUCCESS method=SellerTest.testSellerBtnPresence()[pri:1, instance:com.flipkart.tests.SellerTest@1b66c0fb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.flipkart.tests.SellerTest@1b66c0fb]" started-at="2024-06-14T16:44:25 IST" name="setup" finished-at="2024-06-14T16:44:29 IST" duration-ms="4674" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.flipkart.tests.SellerTest.testSellerLoginFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSellerLoginFunctionality()[pri:2, instance:com.flipkart.tests.SellerTest@1b66c0fb]" started-at="2024-06-14T16:44:29 IST" name="testSellerLoginFunctionality" finished-at="2024-06-14T16:44:54 IST" duration-ms="24710" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //div[normalize-space()='Wrong user details. Please enter correct details to log in.*']' (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //div[normalize-space()='Wrong user details. Please enter correct details to log in.*']' (tried for 10 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at com.flipkart.utils.WaitUtils.waitForElementToBeVisible(WaitUtils.java:14)
at com.flipkart.pages.SellerPage.isCredentialsValid(SellerPage.java:121)
at com.flipkart.tests.SellerTest.testSellerLoginFunctionality(SellerTest.java:63)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[normalize-space()='Wrong user details. Please enter correct details to log in.*']"}
  (Session info: chrome=126.0.6478.62)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.19.1', revision: 'abe0ee07dc'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b5433df722461a9235d9df3563a62390, findElement {value=//div[normalize-space()='Wrong user details. Please enter correct details to log in.*'], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 126.0.6478.62, chrome: {chromedriverVersion: 126.0.6478.61 (8dc092df54ce..., userDataDir: C:\Users\AASHIS~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:56842}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:56842/devtoo..., se:cdpVersion: 126.0.6478.62, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b5433df722461a9235d9df3563a62390
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy27.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
... 35 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSellerLoginFunctionality -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.flipkart.tests.SellerTest@1b66c0fb]" started-at="2024-06-14T16:44:54 IST" name="teardown" finished-at="2024-06-14T16:44:55 IST" duration-ms="1339" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSellerLoginFunctionality status=FAILURE method=SellerTest.testSellerLoginFunctionality()[pri:2, instance:com.flipkart.tests.SellerTest@1b66c0fb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.flipkart.tests.SellerTest@1b66c0fb]" started-at="2024-06-14T16:44:55 IST" name="setup" finished-at="2024-06-14T16:45:01 IST" duration-ms="5778" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.flipkart.tests.SellerTest.testSellerResetPasswordFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSellerResetPasswordFunctionality()[pri:3, instance:com.flipkart.tests.SellerTest@1b66c0fb]" started-at="2024-06-14T16:45:01 IST" name="testSellerResetPasswordFunctionality" finished-at="2024-06-14T16:45:08 IST" duration-ms="6474" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSellerResetPasswordFunctionality -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.flipkart.tests.SellerTest@1b66c0fb]" started-at="2024-06-14T16:45:08 IST" name="teardown" finished-at="2024-06-14T16:45:09 IST" duration-ms="1625" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSellerResetPasswordFunctionality status=SUCCESS method=SellerTest.testSellerResetPasswordFunctionality()[pri:3, instance:com.flipkart.tests.SellerTest@1b66c0fb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.flipkart.tests.SellerTest@1b66c0fb]" started-at="2024-06-14T16:45:09 IST" name="setup" finished-at="2024-06-14T16:45:14 IST" duration-ms="4997" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.flipkart.tests.SellerTest.testStartSellingBtnPresence()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testStartSellingBtnPresence()[pri:4, instance:com.flipkart.tests.SellerTest@1b66c0fb]" started-at="2024-06-14T16:45:14 IST" name="testStartSellingBtnPresence" finished-at="2024-06-14T16:45:18 IST" duration-ms="3670" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testStartSellingBtnPresence -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:com.flipkart.tests.SellerTest@1b66c0fb]" started-at="2024-06-14T16:45:18 IST" name="teardown" finished-at="2024-06-14T16:45:20 IST" duration-ms="1667" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testStartSellingBtnPresence status=SUCCESS method=SellerTest.testStartSellingBtnPresence()[pri:4, instance:com.flipkart.tests.SellerTest@1b66c0fb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.flipkart.tests.SellerTest -->
    </test> <!-- SellerTest -->
  </suite> <!-- Flipkart Automation Suite -->
</testng-results>
